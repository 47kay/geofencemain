# docs/paths/employees.yaml
paths:
  /employees:
    post:
      tags:
        - Employees
      summary: Add new employee
      description: Create a new employee in the organization
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
      responses:
        '201':
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    
    get:
      tags:
        - Employees
      summary: Get all employees
      description: Get all employees for the organization
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [active, inactive, on_leave, terminated]
        - in: query
          name: department
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: List of employees
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Employee'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /employees/{id}:
    get:
      tags:
        - Employees
      summary: Get specific employee details
      description: Get detailed information about a specific employee
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      tags:
        - Employees
      summary: Update employee details
      description: Update information for a specific employee
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
      responses:
        '200':
          description: Employee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponse'

    delete:
      tags:
        - Employees
      summary: Delete employee
      description: Delete an employee (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'

  /employees/{id}/attendance:
    get:
      tags:
        - Employees
      summary: Get employee attendance records
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
      responses:
        '200':
          description: Employee attendance records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceResponse'

  /employees/{id}/check-in:
    post:
      tags:
        - Employees
      summary: Record employee check-in
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInRequest'
      responses:
        '200':
          description: Check-in recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInResponse'

  /employees/{id}/check-out:
    post:
      tags:
        - Employees
      summary: Record employee check-out
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckOutRequest'
      responses:
        '200':
          description: Check-out recorded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckOutResponse'

  /employees/{id}/location:
    post:
      tags:
        - Employees
      summary: Update employee location
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdateRequest'
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationUpdateResponse'

  /employees/{id}/statistics:
    get:
      tags:
        - Employees
      summary: Get employee statistics
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
      responses:
        '200':
          description: Employee statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
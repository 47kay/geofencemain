# docs/paths/auth.yaml
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new organization and admin user
      description: Creates a new organization account with an admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '201':
          description: Organization and admin user created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          $ref: '#/components/responses/ConflictError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user & get token
      description: Login with email and password to receive access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '423':
          $ref: '#/components/responses/AccountLockedError'

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset email
      description: Send a password reset link to user's email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password using token
      description: Reset user's password using the token received via email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/InvalidTokenError'

  /auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: Get new access token
      description: Get new access token using refresh token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: New access token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          $ref: '#/components/responses/InvalidTokenError'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Logout user and invalidate tokens
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/verify-email/{token}:
    get:
      tags:
        - Authentication
      summary: Verify email address
      description: Verify user's email address using verification token
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/InvalidTokenError'

  /auth/resend-verification:
    post:
      tags:
        - Authentication
      summary: Resend verification email
      description: Resend email verification link to user's email
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Verification email sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/verify-2fa:
    post:
      tags:
        - Authentication
      summary: Verify 2FA code
      description: Verify two-factor authentication code
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify2FARequest'
      responses:
        '200':
          description: 2FA verification successful
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/enable-2fa:
    post:
      tags:
        - Authentication
      summary: Enable 2FA
      description: Enable two-factor authentication for user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 2FA enabled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enable2FAResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /auth/disable-2fa:
    post:
      tags:
        - Authentication
      summary: Disable 2FA
      description: Disable two-factor authentication for user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 2FA disabled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
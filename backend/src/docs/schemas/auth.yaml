components:
  schemas:
    RegistrationRequest:
      type: object
      required:
        - organization
        - admin
        - plan
      properties:
        organization:
          type: object
          required:
            - name
            - industry
            - address
            - contact
          properties:
            name:
              type: string
              example: "Acme Corporation"
            industry:
              type: string
              example: "Technology"
            address:
              type: object
              required:
                - street
                - city
                - state
                - country
                - postalCode
              properties:
                street:
                  type: string
                  example: "123 Business St"
                city:
                  type: string
                  example: "San Francisco"
                state:
                  type: string
                  example: "CA"
                country:
                  type: string
                  example: "USA"
                postalCode:
                  type: string
                  example: "94105"
            contact:
              type: object
              required:
                - email
                - phone
              properties:
                email:
                  type: string
                  format: email
                  example: "contact@acme.com"
                phone:
                  type: string
                  pattern: "^\\+?[\\d\\s-]{10,}$"
                  example: "+1-555-1234567"
                website:
                  type: string
                  format: uri
                  example: "https://www.acme.com"
        admin:
          type: object
          required:
            - email
            - password
            - firstName
            - lastName
          properties:
            email:
              type: string
              format: email
              example: "admin@acme.com"
            password:
              type: string
              minLength: 8
              description: "Must contain uppercase, lowercase, number and special character"
              example: "StrongP@ss123"
            firstName:
              type: string
              example: "John"
            lastName:
              type: string
              example: "Doe"
        plan:
          type: string
          enum:
            - basic
            - professional
            - enterprise
          example: "professional"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "john.doe@acme.com"
        password:
          type: string
          example: "StrongP@ss123"

    LoginResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            token:
              type: string
              example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            user:
              $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: string
          example: "507f1f77bcf86cd799439011"
        email:
          type: string
          format: email
          example: "john.doe@acme.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        role:
          type: string
          enum:
            - superadmin
            - admin
            - manager
            - user
          example: "manager"
        status:
          type: string
          enum:
            - active
            - inactive
            - suspended
            - pending
          example: "active"
        profile:
          type: object
          properties:
            phone:
              type: string
              example: "+1-555-1234567"
            avatar:
              type: string
              example: "https://example.com/avatars/john.jpg"
            jobTitle:
              type: string
              example: "Senior Manager"
            department:
              type: string
              example: "Engineering"
        preferences:
          type: object
          properties:
            language:
              type: string
              example: "en"
            timezone:
              type: string
              example: "America/New_York"
            notifications:
              type: object
              properties:
                email:
                  type: boolean
                  example: true
                push:
                  type: boolean
                  example: true
        lastLogin:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
              example: "2024-02-21T08:00:00Z"
            ip:
              type: string
              example: "192.168.1.1"
            userAgent:
              type: string
              example: "Mozilla/5.0..."

    ForgotPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: "john.doe@acme.com"

    ResetPasswordRequest:
      type: object
      required:
        - token
        - newPassword
      properties:
        token:
          type: string
          example: "reset-token-123..."
        newPassword:
          type: string
          minLength: 8
          description: "Must contain uppercase, lowercase, number and special character"
          example: "NewStrongP@ss123"

    Verify2FARequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          minLength: 6
          maxLength: 6
          example: "123456"

    Enable2FAResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        data:
          type: object
          properties:
            secret:
              type: string
              example: "JBSWY3DPEHPK3PXP"
            qrCode:
              type: string
              example: "data:image/png;base64,..."

    RefreshTokenRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
          format: JWT
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          description: JWT refresh token received during login or previous refresh

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          description: JWT access token
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          description: JWT refresh token
        expires_in:
          type: integer
          format: int32
          example: 3600
          description: Token expiration time in seconds
        token_type:
          type: string
          default: "Bearer"
          example: "Bearer"
          description: Type of token
      required:
        - access_token
        - expires_in
        - token_type

    Verify2FASetupRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          minLength: 6
          maxLength: 6
          pattern: "^\\d{6}$"
          example: "123456"

    VerifyEmailCodeRequest:
      type: object
      required:
        - email
        - code
      properties:
        email:
          type: string
          format: email
          example: "john.doe@acme.com"
        code:
          type: string
          minLength: 4
          maxLength: 4
          pattern: "^\\d{4}$"
          example: "1234"

    InviteUserRequest:
      type: object
      required:
        - email
        - role
      properties:
        email:
          type: string
          format: email
          example: "employee@example.com"
        role:
          type: string
          enum: [admin, manager, user]
          example: "manager"
        departmentId:
          type: string
          example: "60d21b4667d0d8992e610c85"
        additionalData:
          type: object
          example:
            position: "Senior Developer"
            team: "Backend"

    CompleteRegistrationRequest:
      type: object
      required:
        - token
        - firstName
        - lastName
        - password
      properties:
        token:
          type: string
          example: "7f68d7c8f3a4e2b1d0c9b6a5f8e7d6c5b4a3f2e1d0c9b8a7"
        firstName:
          type: string
          example: "Jane"
        lastName:
          type: string
          example: "Smith"
        password:
          type: string
          format: password
          minLength: 8
          description: "Must contain uppercase, lowercase, number and special character"
          example: "StrongP@ss123"
        phone:
          type: string
          example: "+1-555-9876543"
        passportPhoto:
          type: string
          format: binary
          description: "Passport-sized photo of the employee"

    InviteUserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Invitation sent to employee@example.com"
        user:
          type: object
          properties:
            id:
              type: string
              example: "60d21b4667d0d8992e610c85"
            email:
              type: string
              example: "employee@example.com"
            role:
              type: string
              example: "manager"
            status:
              type: string
              example: "pending"
            department:
              type: object
              properties:
                id:
                  type: string
                  example: "60d21b4667d0d8992e610c86"
                name:
                  type: string
                  example: "Engineering"

    CompleteRegistrationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Registration completed successfully"
        user:
          type: object
          properties:
            id:
              type: string
              example: "60d21b4667d0d8992e610c85"
            email:
              type: string
              example: "employee@example.com"
            firstName:
              type: string
              example: "Jane"
            lastName:
              type: string
              example: "Smith"
            role:
              type: string
              example: "manager"
            department:
              type: object
              properties:
                id:
                  type: string
                  example: "60d21b4667d0d8992e610c86"
                name:
                  type: string
                  example: "Engineering"
            organization:
              type: object
              properties:
                id:
                  type: string
                  example: "60d21b4667d0d8992e610c87"
                name:
                  type: string
                  example: "Acme Corporation"
                uniqueId:
                  type: string
                  example: "ACM12345"

    ResendInvitationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Invitation resent to employee@example.com"
        user:
          type: object
          properties:
            id:
              type: string
              example: "60d21b4667d0d8992e610c85"
            email:
              type: string
              example: "employee@example.com"
            role:
              type: string
              example: "manager"

    CancelInvitationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Invitation canceled for employee@example.com"

    ListInvitationsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        invitations:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
                example: "employee@example.com"
              role:
                type: string
                example: "manager"
              department:
                type: object
                properties:
                  id:
                    type: string
                    example: "60d21b4667d0d8992e610c86"
                  name:
                    type: string
                    example: "Engineering"
              invitationStatus:
                type: string
                example: "pending"
              createdAt:
                type: string
                format: date-time
                example: "2024-03-15T10:30:00Z"
              createdBy:
                type: object
                properties:
                  firstName:
                    type: string
                    example: "John"
                  lastName:
                    type: string
                    example: "Doe"
                  email:
                    type: string
                    example: "john.doe@example.com"

    EmploymentDetails:
      type: object
      properties:
        startDate:
          type: string
          format: date
          example: "2023-01-15"
        position:
          type: string
          example: "Software Engineer"
        department:
          type: string
          example: "Engineering"
        departmentId:
          type: string
          example: "60d21b4667d0d8992e610c86"
        employmentType:
          type: string
          enum: [full-time, part-time, contract, intern]
          example: "full-time"
        managerId:
          type: string
          example: "507f1f77bcf86cd799439013"
          description: "ID of the employee's manager"
        officeLocation:
          type: string
          example: "New York Office"
      required:
        - startDate
        - position
        - department
        - employmentType

    RegistrationResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        message:
          type: string
          example: "Registration initiated. Please verify your email with the code sent."
        data:
          type: object
          properties:
            organization:
              type: object
              properties:
                id:
                  type: string
                  example: "507f1f77bcf86cd799439011"
                name:
                  type: string
                  example: "Acme Corporation"
                industry:
                  type: string
                  example: "Technology"
                uniqueId:
                  type: string
                  example: "ACM12345"
                  description: "unique identifier for the organization"
            admin:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@acme.com"
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Doe"
                status:
                  type: string
                  example: "pending"
                  description: "User status will be pending until email is verified"

    DepartmentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "Engineering"
          description: "Department name"
        description:
          type: string
          example: "Software development and engineering team"
          description: "Department description"
        parentDepartmentId:
          type: string
          example: "60d21b4667d0d8992e610c85"
          description: "Optional parent department ID for hierarchical structure"
        managerId:
          type: string
          example: "60d21b4667d0d8992e610c87"
          description: "Optional ID of the manager for this department"

    Department:
      type: object
      properties:
        id:
          type: string
          example: "60d21b4667d0d8992e610c88"
        name:
          type: string
          example: "Engineering"
        description:
          type: string
          example: "Software development and engineering team"
        parentDepartment:
          type: object
          properties:
            id:
              type: string
              example: "60d21b4667d0d8992e610c85"
            name:
              type: string
              example: "Technology"
        managerId:
          type: string
          example: "60d21b4667d0d8992e610c87"
        createdBy:
          type: string
          example: "60d21b4667d0d8992e610c89"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-17T15:35:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-17T15:35:00Z"

  responses:
    DepartmentResponse:
      description: Department operation result
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "Department operation successful"
              department:
                $ref: '#/components/schemas/Department'

    DepartmentsListResponse:
      description: List of departments
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              departments:
                type: array
                items:
                  $ref: '#/components/schemas/Department'

    ForbiddenError:
      description: Access forbidden - user doesn't have required permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "You do not have permission to perform this action"
              error:
                type: string
                example: "forbidden"
            required:
              - success
              - message
              - error

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: "An unexpected error occurred"
              error:
                type: string
                example: "server_error"
            required:
              - success
              - message
              - error